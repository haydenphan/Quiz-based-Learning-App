@{
    ViewData["Title"] = "Create Quiz";
}

<link rel="stylesheet" href="~/css/quiz-create.css" asp-append-version="true" />

<div class="quiz-create-container">
    <div class="quiz-create-sidebar">
        <h5>Questions</h5>
        <div id="questions-list">
            @if (ViewBag.QuestionsList != null && (ViewBag.QuestionsList as List<DataAccess.Models.Question>)?.Any() == true)
            {
                var questionsList = ViewBag.QuestionsList as List<DataAccess.Models.Question>;
                @for (int i = 0; i < questionsList.Count; i++)
                {
                    var question = questionsList[i];
                    <div class="question-item">
                        <span class="question-number">@(i + 1)</span>
                        <span class="question-content">@(string.IsNullOrEmpty(question.QuestionContent) ? "Question" : question.QuestionContent)</span>
                        <span class="time-limit">@(question.TimeLimit != null ? question.TimeLimit.Duration : 20) seconds</span>
                    </div>
                }
            }
            else
            {
                <div class="question-item">
                    <span class="question-number">1</span>
                    <span class="question-content">Question</span>
                    <span class="time-limit">20 seconds</span>
                </div>
            }
        </div>

        <button id="add-question-btn" class="btn btn-primary w-100 mt-3">Add question</button>
    </div>

    <div class="quiz-create-main">
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger mb-3" role="alert">
                @TempData["Error"]
            </div>
        }

        <form id="save-quiz-form" asp-action="SaveQuiz" method="post" class="mt-3">
            <div class="form-group mb-3">
                <label>Quiz Title</label>
                <input type="text" name="quizTitle" class="form-control" required />
            </div>
            <div class="form-group mb-3">
                <label>Quiz Description</label>
                <textarea name="quizDescription" class="form-control" required></textarea>
            </div>

            <div id="questions-container">
                <div class="question-form">
                    <input type="hidden" name="Questions[0].SortOrder" value="1" class="sort-order-input" />
                    <div class="question-box mb-4">
                        <div class="form-group mb-3">
                            <input type="text" name="Questions[0].QuestionContent" class="form-control question-input" placeholder="Start typing your question" required />
                        </div>
                    </div>

                    <div class="answers-grid mb-4">
                        <div class="answer-box red">
                            <input type="hidden" name="Questions[0].Options[0].SortOrder" value="1" />
                            <input type="text" name="Questions[0].Options[0].OptionContent" class="form-control answer-input" placeholder="Add answer 1" required />
                            <input type="radio" name="CorrectAnswerIndices[0]" value="0" required /> Correct
                        </div>
                        <div class="answer-box blue">
                            <input type="hidden" name="Questions[0].Options[1].SortOrder" value="2" />
                            <input type="text" name="Questions[0].Options[1].OptionContent" class="form-control answer-input" placeholder="Add answer 2" required />
                            <input type="radio" name="CorrectAnswerIndices[0]" value="1" /> Correct
                        </div>
                        <div class="answer-box yellow">
                            <input type="hidden" name="Questions[0].Options[2].SortOrder" value="3" />
                            <input type="text" name="Questions[0].Options[2].OptionContent" class="form-control answer-input" placeholder="Add answer 3 (optional)" />
                            <input type="radio" name="CorrectAnswerIndices[0]" value="2" /> Correct
                        </div>
                        <div class="answer-box green">
                            <input type="hidden" name="Questions[0].Options[3].SortOrder" value="4" />
                            <input type="text" name="Questions[0].Options[3].OptionContent" class="form-control answer-input" placeholder="Add answer 4 (optional)" />
                            <input type="radio" name="CorrectAnswerIndices[0]" value="3" /> Correct
                        </div>
                    </div>

                    <div class="options-bar d-flex justify-content-between mb-3">
                        <div class="form-group me-3">
                            <label>Question type</label>
                            <select class="form-control">
                                <option selected>Quiz</option>
                            </select>
                        </div>
                        <div class="form-group me-3">
                            <label>Time Limit</label>
                            <select name="Questions[0].TimeLimitId" class="form-control time-limit-select" required>
                                @foreach (var timeLimit in ViewBag.TimeLimits as List<DataAccess.Models.TimeLimit>)
                                {
                                    if (timeLimit.Duration == 20)
                                    {
                                        <option value="@timeLimit.Id" selected data-duration="@timeLimit.Duration">@timeLimit.Duration seconds</option>
                                    }
                                    else
                                    {
                                        <option value="@timeLimit.Id" data-duration="@timeLimit.Duration">@timeLimit.Duration seconds</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="form-group me-3">
                            <label>Points</label>
                            <select class="form-control">
                                <option selected>Standard</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Answer options</label>
                            <select class="form-control">
                                <option selected>Single select</option>
                            </select>
                        </div>
                    </div>

                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-outline-secondary me-2 delete-question-btn">Delete</button>
                    </div>
                </div>
            </div>

            <button type="submit" class="btn btn-primary w-100 mt-3">Save Quiz</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        let initialQuestionCount = @((ViewBag.QuestionsList as List<DataAccess.Models.Question>)?.Count ?? 0);
        if (initialQuestionCount === 0) {
            initialQuestionCount = 1;
        }

        let questionIndex = initialQuestionCount;

        function updateSidebarTimeLimit(questionForm, questionItem) {
            const timeLimitSelect = questionForm.querySelector('.time-limit-select');
            const selectedOption = timeLimitSelect.options[timeLimitSelect.selectedIndex];
            const duration = selectedOption.getAttribute('data-duration');
            questionItem.querySelector('.time-limit').textContent = `${duration} seconds`;
        }

        function updateQuestionNumbers() {
            const questionItems = document.querySelectorAll('#questions-list .question-item');
            const questionForms = document.querySelectorAll('.question-form');
            questionItems.forEach((item, index) => {
                item.querySelector('.question-number').textContent = index + 1;
            });

            questionForms.forEach((form, index) => {
                form.querySelector('.sort-order-input').name = `Questions[${index}].SortOrder`;
                form.querySelector('.sort-order-input').value = index + 1;
                form.querySelector('.question-input').name = `Questions[${index}].QuestionContent`;
                form.querySelectorAll('.answer-box').forEach((box, optIndex) => {
                    const optionInput = box.querySelector('.answer-input');
                    const sortOrderInput = box.querySelector('input[type="hidden"]');
                    const radioInput = box.querySelector('input[type="radio"]');
                    sortOrderInput.name = `Questions[${index}].Options[${optIndex}].SortOrder`;
                    sortOrderInput.value = optIndex + 1;
                    optionInput.name = `Questions[${index}].Options[${optIndex}].OptionContent`;
                    radioInput.name = `CorrectAnswerIndices[${index}]`;
                    radioInput.value = optIndex;
                });
                form.querySelector('.time-limit-select').name = `Questions[${index}].TimeLimitId`;
            });
        }

        document.querySelectorAll('.delete-question-btn').forEach(btn => {
            btn.addEventListener('click', function () {
                const questionForm = btn.closest('.question-form');
                const questionItem = document.querySelector(`#questions-list .question-item:nth-child(${Array.from(document.querySelectorAll('.question-form')).indexOf(questionForm) + 1})`);
                questionForm.remove();
                if (questionItem) questionItem.remove();
                updateQuestionNumbers();
            });
        });

        document.addEventListener('DOMContentLoaded', function () {
            const defaultQuestionForm = document.querySelector('.question-form');
            const defaultQuestionItem = document.querySelector('#questions-list .question-item');
            if (defaultQuestionForm && defaultQuestionItem) {
                updateSidebarTimeLimit(defaultQuestionForm, defaultQuestionItem);
            }
        });

        document.querySelectorAll('.question-form').forEach((form, index) => {
            const timeLimitSelect = form.querySelector('.time-limit-select');
            const questionItem = document.querySelector(`#questions-list .question-item:nth-child(${index + 1})`);
            if (questionItem) {
                timeLimitSelect.addEventListener('change', function () {
                    updateSidebarTimeLimit(form, questionItem);
                });
            }
        });

        document.getElementById('add-question-btn').addEventListener('click', function () {
            const questionsContainer = document.getElementById('questions-container');
            const questionCount = questionsContainer.getElementsByClassName('question-form').length;

            const newQuestionForm = document.createElement('div');
            newQuestionForm.classList.add('question-form');
            newQuestionForm.innerHTML = `
                        <input type="hidden" name="Questions[${questionCount}].SortOrder" value="${questionCount + 1}" class="sort-order-input" />
                        <div class="question-box mb-4">
                            <div class="form-group mb-3">
                                <input type="text" name="Questions[${questionCount}].QuestionContent" class="form-control question-input" placeholder="Start typing your question" required />
                            </div>
                        </div>

                        <div class="answers-grid mb-4">
                            <div class="answer-box red">
                                <input type="hidden" name="Questions[${questionCount}].Options[0].SortOrder" value="1" />
                                <input type="text" name="Questions[${questionCount}].Options[0].OptionContent" class="form-control answer-input" placeholder="Add answer 1" required />
                                <input type="radio" name="CorrectAnswerIndices[${questionCount}]" value="0" required /> Correct
                            </div>
                            <div class="answer-box blue">
                                <input type="hidden" name="Questions[${questionCount}].Options[1].SortOrder" value="2" />
                                <input type="text" name="Questions[${questionCount}].Options[1].OptionContent" class="form-control answer-input" placeholder="Add answer 2" required />
                                <input type="radio" name="CorrectAnswerIndices[${questionCount}]" value="1" /> Correct
                            </div>
                            <div class="answer-box yellow">
                                <input type="hidden" name="Questions[${questionCount}].Options[2].SortOrder" value="3" />
                                <input type="text" name="Questions[${questionCount}].Options[2].OptionContent" class="form-control answer-input" placeholder="Add answer 3 (optional)" />
                                <input type="radio" name="CorrectAnswerIndices[${questionCount}]" value="2" /> Correct
                            </div>
                            <div class="answer-box green">
                                <input type="hidden" name="Questions[${questionCount}].Options[3].SortOrder" value="4" />
                                <input type="text" name="Questions[${questionCount}].Options[3].OptionContent" class="form-control answer-input" placeholder="Add answer 4 (optional)" />
                                <input type="radio" name="CorrectAnswerIndices[${questionCount}]" value="3" /> Correct
                            </div>
                        </div>

                        <div class="options-bar d-flex justify-content-between mb-3">
                            <div class="form-group me-3">
                                <label>Question type</label>
                                <select class="form-control">
                                    <option selected>Quiz</option>
                                </select>
                            </div>
                            <div class="form-group me-3">
                                <label>Time Limit</label>
                                <select name="Questions[${questionCount}].TimeLimitId" class="form-control time-limit-select" required>
        @foreach (var timeLimit in ViewBag.TimeLimits as List<DataAccess.Models.TimeLimit>)
        {
            if (timeLimit.Duration == 20)
            {
                                                    <option value="@timeLimit.Id" selected data-duration="@timeLimit.Duration">@timeLimit.Duration seconds</option>
            }
            else
            {
                                                    <option value="@timeLimit.Id" data-duration="@timeLimit.Duration">@timeLimit.Duration seconds</option>
            }
        }
                                </select>
                            </div>
                            <div class="form-group me-3">
                                <label>Points</label>
                                <select class="form-control">
                                    <option selected>Standard</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label>Answer options</label>
                                <select class="form-control">
                                    <option selected>Single select</option>
                                </select>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-outline-secondary me-2 delete-question-btn">Delete</button>
                        </div>
                    `;

            questionsContainer.appendChild(newQuestionForm);

            const questionsList = document.getElementById('questions-list');
            const newQuestionItem = document.createElement('div');
            newQuestionItem.classList.add('question-item');

            const timeLimitSelect = newQuestionForm.querySelector('.time-limit-select');
            const selectedOption = timeLimitSelect.options[timeLimitSelect.selectedIndex];
            const duration = selectedOption.getAttribute('data-duration');

            newQuestionItem.innerHTML = `
                        <span class="question-number">${questionCount + 1}</span>
                        <span class="question-content">Question</span>
                        <span class="time-limit">${duration} seconds</span>
                    `;
            questionsList.appendChild(newQuestionItem);

            newQuestionForm.querySelector('.delete-question-btn').addEventListener('click', function () {
                newQuestionForm.remove();
                newQuestionItem.remove();
                updateQuestionNumbers();
            });

            timeLimitSelect.addEventListener('change', function () {
                updateSidebarTimeLimit(newQuestionForm, newQuestionItem);
            });
        });

        document.getElementById('save-quiz-form').addEventListener('submit', function (e) {
            const questionForms = document.querySelectorAll('.question-form');
            if (questionForms.length === 0) {
                e.preventDefault();
                alert('Please add at least one question to save the quiz.');
            }
        });
    </script>
}